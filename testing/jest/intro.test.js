const {sum, nativeNull} = require('./intro');


// Один вызов функции test считается одним тест-кейсом
test('Return sum of two values', () => {
  // В одном тест-кейсе можно вызывать любое количество экспектов
  // Если падает один из экспектов, то падает целеком весь тест

  /* toBe() (и подобные методы) называется метчером, toBe сравнивает результат работы переданной в expect функции с переданным параметром */
  expect(sum(1, 3)).toBe(4);
  // То же самое что и toBe 
  expect(sum(1, 3)).toEqual(4);
});

test('Other methods for testing integer:', () => {
  // Результат работы функции должен быть больше 5
  expect(sum(4, 8)).toBeGreaterThan(5);

  // ...результат больше или равен 12
  expect(sum(4, 8)).toBeGreaterThanOrEqual(12);

  // ...результат должен быть меньше 13
  expect(sum(4, 8)).toBeLessThan(13);

  // ...меньше или равен 12
  expect(sum(4, 8)).toBeLessThanOrEqual(12);
})

test('Metods for testing floats:', () => {
  /* Метод для проверки суммы дробных чисел, означает что результат "должен быть близок к". 
  При тестировании с помощью toBe() получили бы кравсный тест т.к. JS суммирует дробные "по своему" */
  expect(sum(0.1, 0.2)).toBeCloseTo(0.3);
})



