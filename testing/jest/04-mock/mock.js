/* В контексте JavaScript, "mock" - это понятие, связанное с тестированием программного обеспечения. 
Мок (mock) представляет собой имитацию или замену реального объекта или модуля, 
которая используется во время тестирования для создания контролируемого окружения и проверки 
функциональности кода.

Моки обычно создаются для следующих целей:

1. Изолированное тестирование: Моки позволяют изолировать модули или компоненты программы и тестировать 
их независимо от остальной системы. Например, если модуль A зависит от модуля B, можно создать мок для 
модуля B, чтобы проверить только функциональность модуля A.

2. Создание заранее определенных сценариев: Моки позволяют создавать специфические сценарии для 
тестирования различных вариантов поведения кода. Можно настроить моки так, чтобы возвращать определенные 
значения, имитировать ошибки или проверять, какие методы были вызваны с какими параметрами.

3. Замена внешних зависимостей: Если ваш код зависит от внешних сервисов, баз данных или других 
компонентов, вы можете создать моки для этих зависимостей, чтобы не зависеть от реальных систем во время 
тестирования. Это позволяет вам тестировать код в изолированной среде и контролировать его поведение.

4. Обычно моки создаются с использованием специальных библиотек или фреймворков, таких как Jest, 
Sinon.js, Jasmine и других. Эти инструменты предоставляют функциональность для создания моков, 
настройки их поведения и проверки взаимодействия с ними во время тестирования. */

function map(arr, callback) {
  const result = [];

  for (let item of arr) {
    result.push(callback(item));
  }

  return result;
}

module.exports = map;