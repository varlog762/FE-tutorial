/* Таймер можно присвоить переменной для того, чтобы потом иметь возмозжность им управлять (например сбрасывать).
Первым параметром принимает функцию (именно объявление или передачу ее - мы ее не вызываем, он сам!), вторым параметром указываем время в мс, третий и прочие это аргументы для переданной функции. */
// Вариант с объявлением функции в качкестве первого параметра.
const timerID = setTimeout((text) => {
  console.log(text);
}, 5000, 'Some text');
// Вариант с передачей функции в качкестве первого параметра.
function textWriter(text) {
  console.log(text);
}

const timerID2 = setTimeout(textWriter, 5000, 'Some text');
// Примеры выше не требуют какого-либо дополнительного вызова - setTimeout начнет отсчет времени как только будет прочитан.

/* Функция останавливает таймер. Например у нас на сайте есть форма, которая должна всплыть через определенное время после входа пользователя на сайт, но пользователь успел сам вызвать и заполнить эту форму, то необходимо отменить ее появление - в этом и поможет функция  clearInterval. */
clearInterval(timerID);


/* Если нужно, чтобы какая-либо функция выполнилась не единожды через определенное время, а циклически (постоянно через заданное время), то вместо setTimeout нужно использовать setInterval (синтаксис тот же). */
